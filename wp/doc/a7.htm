<!DOCTYPE html>
<meta charset="utf-8">
<link href="css/reset.css" rel="stylesheet" type="text/css">
<link href="css/ryEcho.css" rel="stylesheet" type="text/css">
<script src="http://code.jquery.com/jquery-latest.min.js"></script>
<script src="js/function.js"></script>
<script>
;(function ( $, W, D, undefined ) {
    var pg = 'ryEcho' ; //pluginName
    $[pg] = function() 
    {
        $[pg].args = Array.prototype.slice.call(arguments) ; 
        $[pg].mkSettings() ;
        if ($.isFunction( $[pg][ $[pg].args[0] ] ))  //$.pluginName('fn name', arguments obj) ;
        {
            $[pg][ $[pg].args[0] ]() ;
        }
        else
        {
            $[pg].init() ;
        }
    } ;

    
    $[pg].defaults = 
    {
        testMode: true,
    } ;

    //object default options
    var defaults = 
    {

    }
   
    var innerSettings = (function()
    {
        return {
              maskClass: 'ryEcho-mask'
            , maskCss:
              {
                  position      : 'absolute'
                //, width       : '100%'
                //, height      : '100%'
                , backgroundColor: 'black'
                , top           : 0
                , left          : 0
                , opacity       : 0.7
                , zIndex        : 1000
              }
            , containerClass: 'ryEcho-container'
            , containerCss:
            {
                  border    : '0px solid white'
                , display   : 'inline-block'
                , position  : 'absolute'
                , top       :'30%'
                , left      :'50%'
                , zIndex    : 1005
                , minWidth  : '200px'
                , maxWidth  : '400px'
            }
            , widgetClass: 'ryEcho-widget rouncConer shadow'
            , widgetCss:
            {
                  padding   : '15px'
                , zIndex    : 1010
                , border    : '1px solid black'
                , backgroundColor: '#FFF'
                , marginBottom: '30px '         
            }
            , textWraperClass: 'ryEcho-textWraper'
            , textWraperCss:
            {
                wordWrap: 'break-word'
            }              
        } ;
    }()) ;
    
    //演員名單
    var actors = 
    {
          mask      : null
        , container : null
        , widget    : null
        , textWraper: null
    } ; 

    function Plugin(element)
    {  
        this.element = element ;
        this.ele$    = $(element) ;
        this.args    = Plugin.args ;
        
        this.actors  = actors ;
        
        this.mkSettings() ;      
        this.init() ;
    }
    
    Plugin.prototype =
    {
          mkSettings: function()
        {
            this.settings = $.extend({}, defaults, $[pg].settings, this.args[0]) ;    
        }
        , init: function()
        {
            $[pg].log('大初始') ;
            var self = this ;
            
            self.mask() ;
            self.echo() ;
            self.bindEvent() ;            
            
        }
        , mask: function()
        {
            var self = this ;
            innerSettings.maskCss.width = $(document).outerWidth() ;
            innerSettings.maskCss.height = $(document).outerHeight() ;
            
            self.actors.mask = $('<div />')
                .addClass(innerSettings.maskClass)
                .css(innerSettings.maskCss)
                .appendTo('body') ;
                
        }
        , echo: function()
        {
            var self = this ;
            self.actors.container = $('<div />')
                .addClass(innerSettings.containerClass)
                .css(innerSettings.containerCss)
                
            self.actors.widget = $('<div />')
                .addClass(innerSettings.widgetClass)
                .css(innerSettings.widgetCss)
                .appendTo(self.actors.container) ;
            
            self.actors.textWraper = $('<span />')
                .addClass(innerSettings.textWraperCss)
                .text(self.settings.content)
                .css(innerSettings.textWraperCss)
                .appendTo(self.actors.widget) ;
            
            self.actors.container.appendTo('body') ;
            self.putCenter() ;
        }
        , putCenter: function()
        {
            var self = this ;
            var eleIn$ = self.actors.container ;
            var eleOut$ = self.actors.mask ;
            var positionOut = eleOut$.position() ;

            var centerOut = 
            {
                  x: ( positionOut.left + (eleOut$.outerWidth() / 2) ) >> 0
                , y: ( positionOut.top + (eleOut$.outerHeight() / 2) ) >> 0
            } ;
            
            var offsetIn = eleIn$.offset() ;
            
            eleIn$
                .css(
                {
                      left: ( centerOut.x - (eleIn$.outerWidth() / 2) ) >> 0
                    //, top: ( centerOut.y - (eleIn$.outerHeight() / 2) ) >> 0
                }) ;
        }
        , bindEvent: function()
        {

                
        }
    }
    
    $.fn[pg] = function() {   
        //處裡套件全域設定
        Plugin.args = Array.prototype.slice.call(arguments) ;
        return this.each(function() {
            if (!$.data(this, 'plugin_' + pg)) {
                $.data(this, 'plugin_' + pg, new Plugin(this));
                //$(selector).pluginName(arguments obj) ;
            }
            else if ($.isFunction(Plugin.prototype[ Plugin.args[0] ]))
            {
                $.data(this, 'plugin_' + pg)[ Plugin.args[0] ]();  //吃參數
                //$(selector).pluginName('method', arguments obj) ;
            }
            else
            {
                console.log('wrong way to use this method:' + Plugin.args[0]) ;
            }
        });
    }
    
    $[pg].init = function()
    {
        $[pg].log('小初始') ;
        $(document)[pg]() ;
    }
    
    $[pg].mkSettings = function()
    {
        $[pg].log('0籌備套件全域設定') ;
        //這裡的順序，越後面代表越重要。所以是以傳進來的參數為主
        $[pg].settings = $.extend({}, defaults, $[pg].defaults, $[pg].args[0]) ;
        
    }    
    $[pg].log = function()
    {
        if ($[pg].defaults.testMode) 
        {
            console.log(arguments) ;
        }

    }
    
    $[pg].testMode = function(mode)
    {
        var _flag = true ;
        if (mode === false)
        {
            _flag = false ;
        }
        $[pg].defaults.testMode = _flag ;
        if (_flag) 
        {
            console.log('testMode is opened') ;
        }
    }      
    
})( jQuery, window, document );

$(function()
{
    $.ryEcho({content: 'say something'}) ;
console.log($(document).outerHeight()) ;    
console.log($(document).outerWidth()) ;     
}) ;
</script>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>